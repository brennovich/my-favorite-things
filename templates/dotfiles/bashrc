changequote(`[[[', `]]]')

if [ -s ~/.env-golang ]; then
  source ~/.env-golang
fi

if [ -s ~/.env-rust ]; then
  source ~/.env-rust
fi

if [ -s ~/.env-ruby ]; then
  source ~/.env-ruby
fi

# enable bash completion in interactive shells
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

export EDITOR=vim
export TERM=xterm-256color
export HISTSIZE=-1

alias ls='ls --color'
alias grepc='grep --color=auto --exclude-dir=.git --line-number --binary-files=without-match'
alias grepd='grep --color=auto --exclude-dir=.git --line-number --dereference-recursive --binary-files=without-match'

function __parse_git_status {
  repo_check=$(git status &> /dev/null; echo $?)
  index=`if [ ${repo_check} -eq 0 ]; then git status -s | awk '{ print $1 }'; fi;`

  case "${index}" in
    *'??'*)
      printf 'ยก'
      ;;
    *D*)
      printf '-'
      ;;
    *M*)
      printf '*'
      ;;
    *)
      ;;
  esac
}

function lb() {
  case "$1" in
    "tag")
      # Far from optimal but fair printing searh by tag
      grep -nH -A 2 ":$2:" ~/logbook/* \
        | grep -v "\-\-\-\-\|\:$2\:" \
        | sed -rn "s/md-([[:digit:]]*)-/md:\1\\n\\t/p"
      ;;
    *)
      tags="$(echo :$@: | sed 's/ /:/g')"

      vim \
        -c 'set wrap' \
        -c 'set spell' \
        -c 'set filetype=markdown' \
        -c "execute \"normal! i${tags}\<cr>$(seq -s '-' $(echo ${tags} | wc -c) | sed 's/[0-9]//g')\<cr>\"" \
        ~/logbook/$(date '+%Y-%m-%d').md
      ;;
  esac
}

function lk() {
  case "$1" in
    "tag")
      # Far from optimal but fair printing searh by tag
      grep -nH -A 2 ":$2:" ~/links/* \
        | grep -v "\-\-\-\-\|\:$2\:" \
        | sed -rn "s/md-([[:digit:]]*)-/md:\1\\n\\t/p"
      ;;
    *)
      link="${1}" && shift
      [[ $link == http* ]] || link="https://${link}"

      tags="$(echo :$@: | sed 's/ /:/g')"
      title="${link} - $(curl -sSL ${link} | grep -oP '(?<=title>).*(?=<\/title>)')"

      vim \
        -c 'set wrap' \
        -c 'set spell' \
        -c 'set filetype=markdown' \
        -c "execute \"normal! O${tags}\<cr>$(seq -s '-' $(echo ${tags} | wc -c) | sed 's/[0-9]//g')\<cr>${title}\<cr>\"" \
        ~/links/$(date '+%Y-%m-%d').md
      ;;
  esac
}

export PS1="[\[\e[35m\]\W\[\e[m\]\[\e[0;37m\]\$(__parse_git_status)\[\e[m\]] "
export GPG_TTY=$(tty)

changequote([[[`]]], [[[']]])
